[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-cli"
version = "1.2.2"
description = "Local RAG system with embedded Multi-Agent Framework for Claude Code plugin"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "DiaTech", email = "support@rag-cli.dev"}
]
keywords = [
    "rag",
    "retrieval",
    "augmented-generation",
    "vector-search",
    "semantic-search",
    "multi-agent",
    "orchestration",
    "documentation",
    "knowledge-base",
    "claude-code",
    "plugin"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/ItMeDiaTech/rag-cli"
Repository = "https://github.com/ItMeDiaTech/rag-cli"
"Bug Reports" = "https://github.com/ItMeDiaTech/rag-cli/issues"
Documentation = "https://github.com/ItMeDiaTech/rag-cli/wiki"

[project.scripts]
rag-index = "cli.index:main"
rag-retrieve = "cli.retrieve:main"
rag-monitor = "monitoring.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.isort]
profile = "black"
multi_line_mode = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--verbose --strict-markers"

[tool.pylint.messages_control]
max-line-length = 120
